/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */

#nullable enable

namespace Azure.IoT.Operations.Mock.AdrBaseService
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using Azure.IoT.Operations.Mock;

    /// <summary>
    /// Represents a Device resource, modeled after the devices.namespaces.deviceregistry.microsoft.com CRD in Kubernetes.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.10.0.0")]
    public partial class Device
    {
        /// <summary>
        /// A set of key-value pairs that contain custom attributes set by the customer.
        /// </summary>
        [JsonPropertyName("attributes")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public Dictionary<string, string>? Attributes { get; set; } = default;

        /// <summary>
        /// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
        /// </summary>
        [JsonPropertyName("discoveredDeviceRef")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? DiscoveredDeviceRef { get; set; } = default;

        /// <summary>
        /// Indicates if the resource and identity are enabled or not. A disabled device cannot authenticate with Microsoft Entra ID.
        /// </summary>
        [JsonPropertyName("enabled")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Enabled { get; set; } = default;

        /// <summary>
        /// Connection endpoint url a device can use to connect to a service.
        /// </summary>
        [JsonPropertyName("endpoints")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public DeviceEndpointsSchema? Endpoints { get; set; } = default;

        /// <summary>
        /// The Device ID provided by the customer.
        /// </summary>
        [JsonPropertyName("externalDeviceId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? ExternalDeviceId { get; set; } = default;

        /// <summary>
        /// A timestamp (in UTC) that is updated each time the resource is modified.
        /// </summary>
        [JsonPropertyName("lastTransitionTime")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public DateTime? LastTransitionTime { get; set; } = default;

        /// <summary>
        /// Device manufacturer.
        /// </summary>
        [JsonPropertyName("manufacturer")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Manufacturer { get; set; } = default;

        /// <summary>
        /// Device model.
        /// </summary>
        [JsonPropertyName("model")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Model { get; set; } = default;

        /// <summary>
        /// Device operating system.
        /// </summary>
        [JsonPropertyName("operatingSystem")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? OperatingSystem { get; set; } = default;

        /// <summary>
        /// Device operating system version.
        /// </summary>
        [JsonPropertyName("operatingSystemVersion")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? OperatingSystemVersion { get; set; } = default;

        /// <summary>
        /// Gets a unique identifier for this resource.
        /// </summary>
        [JsonPropertyName("uuid")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Uuid { get; set; } = default;

        /// <summary>
        /// An integer that is incremented each time the resource is modified.
        /// </summary>
        [JsonPropertyName("version")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public ulong? Version { get; set; } = default;

    }
}
